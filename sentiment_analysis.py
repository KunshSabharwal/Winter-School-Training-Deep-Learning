# -*- coding: utf-8 -*-
"""Sentiment_Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eouuFczbMIPEx3a5M2igducBzQVnYtpn
"""

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense
from tensorflow.keras.preprocessing.text import Tokenizer
from tensorflow.keras.preprocessing.sequence import pad_sequences
import numpy as np

# Sample dataset
texts = ["I love this product", "This is the worst thing ever", "Absolutely amazing", "Not worth it", "Fantastic quality"]
labels = [1, 0, 1, 0, 1]  # 1 = positive, 0 = negative

# Tokenize and pad the sequences
tokenizer = Tokenizer()
tokenizer.fit_on_texts(texts)
sequences = tokenizer.texts_to_sequences(texts)
vocab_size = len(tokenizer.word_index) + 1
max_length = max(len(seq) for seq in sequences)
padded_sequences = pad_sequences(sequences, maxlen=max_length, padding='post')

# Prepare labels
labels = np.array(labels)

# Build RNN Model
model = Sequential([
    Embedding(input_dim=vocab_size, output_dim=10, input_length=max_length),
    LSTM(50),
    Dense(1, activation='sigmoid')
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(padded_sequences, labels, epochs=10, batch_size=2, verbose=2)

# Test the model
test_text = "I hate this product"
test_seq = tokenizer.texts_to_sequences([test_text])
test_padded = pad_sequences(test_seq, maxlen=max_length, padding='post')
prediction = model.predict(test_padded)
print(f"Sentiment: {'Positive' if prediction[0][0] > 0.5 else 'Negative'}")